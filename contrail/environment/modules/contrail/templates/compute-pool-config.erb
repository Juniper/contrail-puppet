#!/usr/bin/python
import sys
import subprocess
from contrail_provisioning.storage.storagefs import ceph_utils

host_ip = "<%=@contrail_host_ip%>"
NUM_TARGET_OSD=<%=@host_num_disk%>
storage_hostnames="<%= @contrail_storage_hostname %>"
storage_chassis_config=['<%= @contrail_pool_map%>']

osd_map_config=[]

if len(storage_hostnames) == 0:
    print 'storage_hostnames empty'
    sys.exit(2)

ceph_setup_utils = ceph_utils.SetupCephUtils()
#NUM_CURR_OSD = ceph_setup_utils.exec_local("ceph -s | grep 'osdmap' | awk '{print $7}' ")
NUM_CURR_OSD = ceph_setup_utils.exec_local("ceph osd dump | grep '%s' | wc -l" %host_ip)


if int(NUM_CURR_OSD) == NUM_TARGET_OSD:

    for disk in storage_chassis_config:
      disksplit = disk.split(':')
      disk_name = disksplit[1]
      cmd  = ("ceph-disk list | grep \" *%s.*ceph data\" | sed -ne 's/.*osd.\([0-9][0-9]*\).*/\\1/p' " %(disk_name))
      osd_id=subprocess.check_output(cmd, shell=True)
      disksplit[2] = osd_id.rstrip('\n')
      osd_map= ':'.join(disksplit)
      osd_map_config.append(osd_map)

    file_name = storage_hostnames+'-disk-osd-map.txt'
    file=open('/tmp/'+file_name,'w')
    file.write(str(osd_map_config))
    file.close()
    ceph_setup_utils.exec_local("rados -p internal put %s /tmp/%s" %(file_name, file_name))
    #os.remove('/tmp/'+file_name)
else:
    print 'Exiting as current OSDs={0}, needed= {1}'.format(NUM_CURR_OSD, NUM_TARGET_OSD)
    sys.exit (3)


